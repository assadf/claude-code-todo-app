version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mongodb://mongodb:27017/claude-todo-app?replicaSet=rs0
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:?NEXTAUTH_SECRET environment variable is required}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:?GOOGLE_CLIENT_ID environment variable is required}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:?GOOGLE_CLIENT_SECRET environment variable is required}
      - PLAYWRIGHT_BASE_URL=${PLAYWRIGHT_BASE_URL:-http://localhost:3000}
      - ALLOWED_IMAGE_DOMAINS=${ALLOWED_IMAGE_DOMAINS:-lh3.googleusercontent.com}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - todo-network
    restart: unless-stopped
    profiles:
      - prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

  mongodb:
    image: mongo:7.0
    container_name: claude-todo-mongodb
    # Remove exposed ports for production security - only accessible via internal network
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    environment:
      - MONGO_INITDB_DATABASE=claude-todo-app
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-replica-init.js:/docker-entrypoint-initdb.d/mongo-replica-init.js:ro
    networks:
      - todo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok", "--quiet"]
      interval: 30s
      timeout: 5s
      start_period: 15s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Development service for local development with hot reloading
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
      - '27017:27017'  # Expose MongoDB for development debugging
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongodb:27017/claude-todo-app?replicaSet=rs0
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-development-secret-key}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:?GOOGLE_CLIENT_ID environment variable is required}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:?GOOGLE_CLIENT_SECRET environment variable is required}
      - PLAYWRIGHT_BASE_URL=${PLAYWRIGHT_BASE_URL:-http://localhost:3000}
      - ALLOWED_IMAGE_DOMAINS=${ALLOWED_IMAGE_DOMAINS:-lh3.googleusercontent.com}
    volumes:
      - .:/app:cached  # Use cached mount for better performance
      - node_modules_cache:/app/node_modules  # Use named volume for node_modules
      - nextjs_cache:/app/.next  # Cache Next.js build artifacts
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - todo-network
    restart: unless-stopped
    profiles:
      - dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 3s
      start_period: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  mongo-express:
    image: mongo-express:1.0.2
    container_name: claude-todo-mongo-express
    ports:
      - '8081:8081'
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=false
      - ME_CONFIG_MONGODB_AUTH_DATABASE=claude-todo-app
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=password
      - ME_CONFIG_SITE_BASEURL=/
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - todo-network
    restart: unless-stopped
    profiles:
      - dev
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/"]
      interval: 30s
      timeout: 5s
      start_period: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

volumes:
  mongodb_data:
    driver: local
  node_modules_cache:
    driver: local
  nextjs_cache:
    driver: local

networks:
  todo-network:
    driver: bridge
